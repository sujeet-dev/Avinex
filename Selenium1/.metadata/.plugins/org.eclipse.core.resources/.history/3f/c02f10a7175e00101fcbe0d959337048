package Lecture8;

import static org.testng.Assert.fail;

import org.checkerframework.common.reflection.qual.GetMethod;
import org.testng.Assert;
import org.testng.ITestResult;
import org.testng.SkipException;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.markuputils.ExtentColor;
import com.aventstack.extentreports.markuputils.Markup;
import com.aventstack.extentreports.markuputils.MarkupHelper;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

public class TestExtentReports {

	public ExtentSparkReporter htmlReporter; //Creating HTML File
	public ExtentReports extent; //Add Configuration, System Config, Creating Test Cases
	public ExtentTest test; // Maintain the test cases, Add log, Pass, Fail, Skip


	@BeforeTest
	public void SetUpReport() {
		htmlReporter=new ExtentSparkReporter("./reports/extent.html");

		htmlReporter.config().setEncoding("utf-8");
		htmlReporter.config().setDocumentTitle("Wedigtech Solution");
		htmlReporter.config().setReportName("Automation Test Result");
		htmlReporter.config().setTheme(Theme.STANDARD);



		extent=new ExtentReports();
		extent.attachReporter(htmlReporter);
		extent.setSystemInfo("Automation Tester", "Sujeet Singh");
		extent.setSystemInfo("build No", "W2A-1234");
		extent.setSystemInfo("Organisation", "Wedig Tech");
	}
	@BeforeMethod
	public void beforeTest(ITestResult result) 
	{
	  String testcaseName=	result.getMethod().getMethodName();
		test=extent.createTest(testcaseName);
		
	}

	@Test
	public void DoLogin() 
	{
//		test=extent.createTest("user Login test");
		test.log(Status.INFO, "Entering the username");
		test.log(Status.INFO, "Entering the passowrd");
		test.log(Status.INFO, "Clicking the Login button");
		Assert.fail();

	}


	@Test
	public void UserRegistration() {
//		test=extent.createTest("user Reg test");

		test.log(Status.INFO, "Entering the FirstName");
		test.log(Status.INFO, "Entering the LastName");
		test.log(Status.INFO, "Entering the email");
		test.log(Status.INFO, "Clicking the Reg button");

	}
    @Test
	public void ValidateTitle() {
//		test=extent.createTest("Validate Title");
		test.info("Validating the title");
		throw new SkipException("skipting the test");
		
		
	}
    @AfterMethod
    public void UpdateResult(ITestResult result) {
    	
    	 String testcaseName= result.getMethod().getMethodName();
    	
    	
		if (result.getStatus()==ITestResult.FAILURE) {
			
			 Markup m= MarkupHelper.createLabel(testcaseName, ExtentColor.RED);
//			test.fail("fail the test case : " + testcaseName);
			test.fail(m);
			
		}else if (result.getStatus()==ITestResult.SUCCESS) {
			 Markup m= MarkupHelper.createLabel(testcaseName, ExtentColor.GREEN);
//			test.pass("Pass the test case : " + testcaseName);
			 test.pass(m);
			 
		}else if (result.getStatus()==ITestResult.SKIP) {
			 Markup m= MarkupHelper.createLabel(testcaseName, ExtentColor.AMBER);
//			test.skip("Skip the test case : " + testcaseName);
			 test.skip(m);
			
		}
	}
    
    
	@AfterTest
	public void EndSetUp() {
		extent.flush();

	}

}
